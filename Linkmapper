Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Define CSV path
$csvPath = "$PSScriptRoot\Sites.csv"

# Create CSV if it doesn't exist
if (!(Test-Path -Path $csvPath)) {
    New-Item -ItemType File -Path $csvPath | Out-Null
    # Add headers to the CSV
    "SiteName,Link" | Out-File -FilePath $csvPath -Encoding UTF8
}

# Load data from CSV
function Load-Sites {
    Import-Csv -Path $csvPath
}

# Save data to CSV
function Save-Site {
    param (
        [string]$SiteName,
        [string]$Link
    )
    Add-Content -Path $csvPath -Value "$SiteName,$Link"
}

# Create the form
$form = New-Object System.Windows.Forms.Form
$form.Text = "Link Manager"
$form.Size = New-Object System.Drawing.Size(400, 500)
$form.StartPosition = "CenterScreen"

# Label for Site Name
$siteNameLabel = New-Object System.Windows.Forms.Label
$siteNameLabel.Text = "Site Name:"
$siteNameLabel.Location = New-Object System.Drawing.Point(10, 10)
$form.Controls.Add($siteNameLabel)

# TextBox for Site Name
$siteNameTextBox = New-Object System.Windows.Forms.TextBox
$siteNameTextBox.Location = New-Object System.Drawing.Point(100, 10)
$siteNameTextBox.Size = New-Object System.Drawing.Size(250, 20)
$form.Controls.Add($siteNameTextBox)

# Label for Link
$linkLabel = New-Object System.Windows.Forms.Label
$linkLabel.Text = "Link:"
$linkLabel.Location = New-Object System.Drawing.Point(10, 40)
$form.Controls.Add($linkLabel)

# TextBox for Link
$linkTextBox = New-Object System.Windows.Forms.TextBox
$linkTextBox.Location = New-Object System.Drawing.Point(100, 40)
$linkTextBox.Size = New-Object System.Drawing.Size(250, 20)
$form.Controls.Add($linkTextBox)

# Button to add site
$addButton = New-Object System.Windows.Forms.Button
$addButton.Text = "Add Site"
$addButton.Location = New-Object System.Drawing.Point(100, 70)
$addButton.Add_Click({
    if ($siteNameTextBox.Text -and $linkTextBox.Text) {
        Save-Site -SiteName $siteNameTextBox.Text -Link $linkTextBox.Text
        $siteNameTextBox.Clear()
        $linkTextBox.Clear()
        Refresh-SiteButtons
    } else {
        [System.Windows.Forms.MessageBox]::Show("Please enter both a site name and a link.")
    }
})
$form.Controls.Add($addButton)

# Panel to hold dynamically created buttons
$buttonPanel = New-Object System.Windows.Forms.Panel
$buttonPanel.Location = New-Object System.Drawing.Point(10, 110)
$buttonPanel.Size = New-Object System.Drawing.Size(360, 340)
$buttonPanel.AutoScroll = $true
$form.Controls.Add($buttonPanel)

# Function to refresh buttons based on CSV content
function Refresh-SiteButtons {
    $buttonPanel.Controls.Clear()
    $y = 0
    Load-Sites | ForEach-Object {
        param ($site)

        $linkButton = New-Object System.Windows.Forms.Button
        $linkButton.Text = $site.SiteName
        $linkButton.Size = New-Object System.Drawing.Size(340, 30)
        $linkButton.Location = New-Object System.Drawing.Point(0, $y)
        $linkButton.Tag = $site.Link
        $linkButton.Add_Click({
            Start-Process -FilePath $linkButton.Tag
        })
        
        $buttonPanel.Controls.Add($linkButton)
        $y += 35
    }
}

# Initial load of buttons
Refresh-SiteButtons

# Show the form
$form.Add_Shown({$form.Activate()})
[void]$form.ShowDialog()
